#!/bin/bash
clear
Menu() {
    clear
    echo -e '\n'
   echo "     ==================================="
    echo "             FORÇAR CONEXÃO (ROOT)     "
   echo "        ==================================="
    echo "               ESCOLHA UMA OPÇÃO"
    echo
   echo "        ==================================="
    echo "            [ P ] - Permições VPN"
    echo "            [ 1 ] - CMSP"
    echo "            [ 2 ] - CMSP KIDS"
    echo "            [ 3 ] - Aulas Parana"
    echo "            [ 4 ] - Applique-se"
    echo "            [ 5 ] - Rio Educa Em Casa"  
    echo "            [ 6 ] - Loop De Conexão"
    echo "            [ 7 ] - Baixar Apps"
    echo "            [ 8 ] - MBs Gastos VPN"
    echo "            [ 9 ] - Rotear VPN"
    echo "            [ N ] - Proximo"
    echo "            [ 0 ] - Sair"
   echo "         ==================================="
   echo
    echo "@alpacinoo007"
    echo "@luanw04"
    echo
    read -n1 -p "Escolha uma Opção: " App
    case $App in  
   1) App="tv.ip.edusp" ; atividade="tv.ip.my.activities.SplashScreen" ; A3="su -c am start -n tv.ip.edusp/tv.ip.my.activities.VideoActivity2 " ; nome="CentroDeMidiasSP" ; A2="su -c am start -n tv.ip.edusp/com.datami.smi.ui.VpnPermissionActivity" ; s="sleep 8" ; A4="su -c am start -n tv.ip.edusp/tv.ip.my.activities.SplashScreen" ; db="su -c pm disable tv.ip.edusp" ; eb="su -c pm enable tv.ip.edusp";;
    2) App="tv.ip.cmspi" ; atividade="tv.ip.my.activities.SplashScreen" ; A3="su -c am start -n tv.ip.cmspi/tv.ip.my.activities.MyVideoActivity" ; nome="RioEducaEmCasa" ; A2="su -c am start -n tv.ip.cmspi/com.datami.smi.ui.VpnPermissionActivity" ; s="sleep 8" ; A4="su -c am start -n tv.ip.cmspi/tv.ip.my.activities.SplashScreen " ; db="su -c pm disable tv.ip.cmspi" ; eb="su -c pm enable tv.ip.cmspi";;
    3) App="tv.ip.aulapr" ; atividade="tv.ip.my.activities.SplashScreen" ; A3="su -c am start -n tv.ip.aulapr/tv.ip.my.activities.VideoActivity2 " ; nome="AulaParana" ; A2="su -c am start -n tv.ip.aulapr/com.datami.smi.ui.VpnPermissionActivity" ; s="sleep 8" ; A4="su -c am start -n tv.ip.aulapr/tv.ip.my.activities.SplashScreen" ; db="su -c pm disable tv.ip.aulapr" ; eb="su -c pm enable tv.ip.aulapr";; 
    4) App="tv.ip.appliquese" ; atividade="tv.ip.my.activities.SplashScreen" ; A3="su -c am start -n tv.ip.appliquese/tv.ip.my.activities.VideoActivity2" ; nome="Applique-se" ; A2="su -c am start -n tv.ip.appliquese/com.datami.smi.ui.VpnPermissionActivity" ; s="sleep 8" ; A4="su -c am start -n tv.ip.appliquese/tv.ip.my.activities.SplashScreen" ; db="su -c pm disable tv.ip.appliquese" ; eb="su -c pm enable tv.ip.appliquese";; 
   5) App="tv.ip.rioeduca" ; atividade="tv.ip.my.activities.SplashScreen" ; A3="su -c am start -n tv.ip.rioeduca/tv.ip.my.activities.VideoActivity2" ; nome="RioEducaEmCasa" ; A2="su -c am start -n tv.ip.rioeduca/com.datami.smi.ui.VpnPermissionActivity" ; s="sleep 8" ; A4="su -c am start -n tv.ip.rioeduca/tv.ip.my.activities.SplashScreen" ; db="su -c pm disable tv.ip.rioeduca" ; eb="su -c pm enable tv.ip.rioeduca";;
    6) App6;;
    7) App7;;
    8) App8;;
    9) App9;;
    P) AppP;;
    p) Appp;;
    N) AppN;;
    n) Appn;;
    0) App0;;
    *) echo "Calma Barboleta" ; echo ; sleep 3 ; Menu;;
    esac
    connect
    }

App9() {
    clear
    echo -e '\n'
   echo "     ==================================="
    echo "             FORÇAR CONEXÃO (ROOT)     "
   echo "        ==================================="
    echo "               ESCOLHA UMA OPÇÃO"
    echo
   echo "        ==================================="
    echo "            [ 1 ] - Via Roteador Wi-Fi"
    echo "            [ 2 ] - Via USB"
    echo "            [ 3 ] - Via Bluetooth"
    echo "            [ 0 ] - Voltar"
   echo "         ==================================="
   echo
    read -n1 -p "Escolha uma Opção: " Apps
    case $Apps in  
   1)Alt1;;
   2)Alt2;;
   3)Alt3;;
   0)Menu;;
   *) echo "Calma Barboleta" ; echo ; sleep 3 ; Menu;;
    esac
    }

Alt1(){
clear
check2() {
    vpn=$(ifconfig | grep -c tun0)
    case $vpn in
    0) echo "VPN não encontrada" ; Menu;;
    1) clear,;;
     esac
}
check2
check1() {
    vpn=$(ifconfig | grep -c wlan0)
    case $vpn in
    0) clear ; echo "Roteador Wi-Fi não está ligado" ; sleep 2 ; check1;;
    1) clear;;
     esac
}
check1
sleep 15 && su -c iptables -t filter -F FORWARD && su -c iptables -t filter -I FORWARD -j ACCEPT && su -c ip rule add from 192.168.43.0/24 lookup 61 && su -c iptables -t nat -F POSTROUTING && su -c ip route add default dev tun0 scope link table 61 && su -c ip route add 192.168.43.0/24 dev wlan0 scope link table 61 && su -c ip route add broadcast 255.255.255.255 dev wlan0 scope link table 61 && echo "Roteamento Wi-Fi iniciado" ; sleep 5 && killall com.termux
}



Alt2(){
clear
check2() {
    vpn=$(ifconfig | grep -c tun0)
    case $vpn in
    0) echo "VPN não encontrada" ; Menu;;
    1) clear,;;
     esac
}
check2
check1() {
    vpn=$(ifconfig | grep -c rndis0)
    case $vpn in
    0) clear ; echo "Ancoragem USB não está ligada" ; sleep 2 ; check1;;
    1) clear;;
     esac
}
check1
sleep 15 && su -c iptables -t filter -F FORWARD && su -c iptables -t filter -I FORWARD -j ACCEPT && su -c ip rule add from 192.168.42.0/24 lookup 61 && su -c iptables -t nat -F POSTROUTING && su -c ip route add default dev tun0 scope link table 61 && su -c ip route add 192.168.42.0/24 dev rndis0 scope link table 61 && su -c ip route add broadcast 255.255.255.255 dev rndis0 scope link table 61 && echo "Compartilhamento via USB iniciado" ; sleep 5 && killall com.termux
}



Alt3(){
clear
check2() {
    vpn=$(ifconfig | grep -c tun0)
    case $vpn in
    0) echo "VPN não encontrada" ; Menu;;
    1) clear,;;
     esac
}
check2
check1() {
    vpn=$(ifconfig | grep -c bt-pan)
    case $vpn in
    0) clear ; echo "Nenhum aparelho conectado via Ancoragem Bluetooth" ; sleep 2 ; check1;;
    1) clear;;
     esac
}
check1
sleep 15 && su -c iptables -t filter -F FORWARD && su -c iptables -t filter -I FORWARD -j ACCEPT && su -c ip rule add from 192.168.44.0/24 lookup 61 && su -c iptables -t nat -F POSTROUTING && su -c ip route add default dev tun0 scope link table 61 && su -c ip route add 192.168.44.0/24 dev bt-pan scope link table 61 && su -c ip route add broadcast 255.255.255.255 dev bt-pan scope link table 61 && echo "Compartilhamento via Bluetooth iniciado" ; sleep 5 && killall com.termux
}

Appn(){
clear
check1() {
    pervpn=$(test -f "$HOME/force3" && echo 1)
    case $pervpn in
    1) bash force3;;
    *) clear && echo "NECESSARIO TER INTERNET NA 1°" ; echo "VEZ PARA BAIXAR O RECURSO" ; sleep 4 && curl -sO https://raw.githubusercontent.com/luanwillianzh/vpn/main/force3 && chmod +x force3 && cp force3 $PREFIX/bin/ && ./force3 ; check1;;
    esac
}
check1
}

AppP(){
clear
check1() {
    pervpn=$(test -f "$HOME/PerVPN2" && echo 1)
    case $pervpn in
    1) bash PerVPN2;;
    *) clear && echo "NECESSARIO TER INTERNET NA 1°" ; echo "VEZ PARA BAIXAR O RECURSO" ; sleep 4 && curl -sO https://raw.githubusercontent.com/luanwillianzh/vpn/main/PerVPN2 && chmod +x PerVPN2 && cp PerVPN2 $PREFIX/bin/ && ./PerVPN2 ; check1;;
    esac
}
check1
}

Appp(){
clear
check1() {
    pervpn=$(test -f "$HOME/PerVPN2" && echo 1)
    case $pervpn in
    1) bash PerVPN2;;
    *) clear && echo "NECESSARIO TER INTERNET NA 1°" ; echo "VEZ PARA BAIXAR O RECURSO" ; sleep 4 && curl -sO https://raw.githubusercontent.com/luanwillianzh/vpn/main/PerVPN2 && chmod +x PerVPN2 && cp PerVPN2 $PREFIX/bin/ && ./PerVPN2 ; check1;;
    esac
}
check1
}

App6(){
clear
check4() {
    vpnloop=$(test -f "$HOME/vpn05" && echo 1)
    case $vpnloop in
    1) bash vpn05;;
    *) clear && echo "NECESSARIO TER INTERNET NA 1°" ; echo "VEZ PARA BAIXAR O RECURSO" ; sleep 4 && curl -sO https://raw.githubusercontent.com/luanwillianzh/vpn/main/vpn05 && chmod +x vpn05 && cp vpn05 $PREFIX/bin/ && ./vpn05 ; check4;;
    esac
}
check4
}

App7(){
clear
check4() {
    vpnloop=$(test -f "$HOME/downloads2" && echo 1)
    case $vpnloop in
    1) bash downloads2;;
    *) clear && echo "NECESSARIO TER INTERNET NA 1°" ; echo "VEZ PARA BAIXAR O RECURSO" ; sleep 4 && curl -sO https://raw.githubusercontent.com/luanwillianzh/vpn/main/downloads2 && chmod +x downloads2 && cp downloads2 $PREFIX/bin/ && ./downloads2 ; check4;;
    esac
}
check4
}

App8(){
clear
echo "É PRECISO ESTAR CONECTADO NA VPN PARA VER" ; echo "O TEMPO CONECTADO E OS MBS GASTOS" ; sleep 5 && clear && su -c am start -n com.android.vpndialogs/com.android.vpndialogs.ManageDialog && bash force
}

connect(){
clear
su -c am broadcast -p com.applisto.appcloner -a com.applisto.appcloner.api.action.NEW_IDENTITY --es package_name $App --ez delete_app_data true && sleep 10 && clear && su -c pm clear $App && su -c am start -n $App/tv.ip.my.activities.PermissionActivity && sleep 1 && su -c am startservice -n $App/tv.ip.my.controller.MyMainService && $A3
check2() {
    vpn=$(ifconfig | grep -c tun0)
    case $vpn in
    0) sleep 2 ; check2;;
    1) su -c am stopservice -n $App/tv.ip.my.controller.MyMainService && su -c killall $App
     esac
}
check2
su -c killall com.termux
}
clear
Menu
